$date
	Thu Jan 25 14:11:50 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! nextPC [31:0] $end
$var wire 32 " memOut [31:0] $end
$var wire 32 # currPC [31:0] $end
$var reg 1 $ clock $end
$scope module adder $end
$var wire 32 % outval [31:0] $end
$var wire 32 & a [31:0] $end
$upscope $end
$scope module mem $end
$var wire 32 ' inAddr [31:0] $end
$var reg 32 ( dataOut [31:0] $end
$upscope $end
$scope module testPC $end
$var wire 1 $ clock $end
$var wire 32 ) nextPC [31:0] $end
$var reg 32 * currPC [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000000000000000000 *
b10000000000000000000100 )
b100100000000100000000000000100 (
b10000000000000000000000 '
b10000000000000000000000 &
b10000000000000000000100 %
0$
b10000000000000000000000 #
b100100000000100000000000000100 "
b10000000000000000000100 !
$end
#1
b1100 "
b1100 (
b10000000000000000001000 !
b10000000000000000001000 %
b10000000000000000001000 )
b10000000000000000000100 #
b10000000000000000000100 &
b10000000000000000000100 '
b10000000000000000000100 *
1$
#2
0$
#3
b11111000000000000000001000 "
b11111000000000000000001000 (
b10000000000000000001100 !
b10000000000000000001100 %
b10000000000000000001100 )
b10000000000000000001000 #
b10000000000000000001000 &
b10000000000000000001000 '
b10000000000000000001000 *
1$
#4
0$
#5
b0 "
b0 (
b10000000000000000010000 !
b10000000000000000010000 %
b10000000000000000010000 )
b10000000000000000001100 #
b10000000000000000001100 &
b10000000000000000001100 '
b10000000000000000001100 *
1$
